name: Health Telemetry Validation

permissions:
  contents: read

concurrency:
  group: health-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: "7 6 * * *" # t√§glich 06:07 UTC

jobs:
  validate-pr:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: "Install deps"
        run: |
          python -m pip install -r requirements.txt
          sudo apt-get update && sudo apt-get install -y jq

      - name: "Read thresholds"
        id: th
        run: |
          python - <<'PY' > "$GITHUB_OUTPUT"
          import yaml
          v=yaml.safe_load(open('configs/telemetry/config.yaml'))['validation']
          print(f"soft={v['min_avg_health_soft']}")
          print(f"hard={v['min_avg_health_hard']}")
          PY

      - name: "Run validation (PR: soft gate)"
        id: validate
        env:
          NOW_FALLBACK: ${{ github.event.pull_request.updated_at }}
        run: |
          NOW="${NOW_FALLBACK:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}"
          python artefacts/screening_runner.py --gate soft --now "$NOW" | tee runner.jsonl
          echo "avg=$(jq -r 'select(.code=="avg_health") | .value' runner.jsonl | head -n1)" >> "$GITHUB_OUTPUT"

      - name: "Summary (PR)"
        run: |
          {
            echo "## Health Validation (PR)"
            echo "- **avg_health**: ${{ steps.validate.outputs.avg }}"
            echo "- **gate**: soft"
            echo "- **soft threshold**: ${{ steps.th.outputs.soft }}"
            echo "- **hard threshold**: ${{ steps.th.outputs.hard }}"
          } >> "$GITHUB_STEP_SUMMARY"

      - name: "Upload validation log"
        uses: actions/upload-artifact@v4
        with:
          name: health-validation-pr
          path: runner.jsonl
          retention-days: 7

  validate-main:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: "Install deps"
        run: |
          python -m pip install -r requirements.txt
          sudo apt-get update && sudo apt-get install -y jq

      - name: "Read thresholds"
        id: th
        run: |
          python - <<'PY' > "$GITHUB_OUTPUT"
          import yaml
          v=yaml.safe_load(open('configs/telemetry/config.yaml'))['validation']
          print(f"soft={v['min_avg_health_soft']}")
          print(f"hard={v['min_avg_health_hard']}")
          PY

      - name: "Run validation (main: hard gate, strict window)"
        id: validate
        env:
          NOW_FALLBACK: ${{ github.event.head_commit.timestamp }}
        run: |
          NOW="${NOW_FALLBACK:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}"
          python artefacts/screening_runner.py --strict-window --gate hard --now "$NOW" | tee runner.jsonl
          echo "avg=$(jq -r 'select(.code=="avg_health") | .value' runner.jsonl | head -n1)" >> "$GITHUB_OUTPUT"

      - name: "Summary (main)"
        run: |
          {
            echo "## Health Validation (main)"
            echo "- **avg_health**: ${{ steps.validate.outputs.avg }}"
            echo "- **gate**: hard (strict window)"
            echo "- **soft threshold**: ${{ steps.th.outputs.soft }}"
            echo "- **hard threshold**: ${{ steps.th.outputs.hard }}"
          } >> "$GITHUB_STEP_SUMMARY"

      - name: "Upload validation log"
        uses: actions/upload-artifact@v4
        with:
          name: health-validation-main
          path: runner.jsonl
          retention-days: 7
